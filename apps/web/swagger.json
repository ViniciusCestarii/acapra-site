{
  "openapi": "3.1.0",
  "info": {
    "title": "Modular-Pets API",
    "description": "Modular-Pets API Documentation",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication endpoints"
    },
    {
      "name": "Pet",
      "description": "Pet module endpoints"
    },
    {
      "name": "Health",
      "description": "Health endpoints"
    }
  ],
  "paths": {
    "/pet/pets": {
      "post": {
        "parameters": [],
        "operationId": "postPetPets",
        "summary": "Create pet",
        "description": "Create a new pet",
        "tags": [
          "Pet"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "maxLength": 255,
                          "type": "string"
                        },
                        "birthdate": {
                          "type": "string"
                        },
                        "observations": {
                          "anyOf": [
                            {
                              "maxLength": 1024,
                              "type": "string"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "sex": {
                          "anyOf": [
                            {
                              "const": "MALE",
                              "type": "string"
                            },
                            {
                              "const": "FEMALE",
                              "type": "string"
                            },
                            {
                              "const": "UNKNOWN",
                              "type": "string"
                            }
                          ]
                        },
                        "mainImageId": {
                          "anyOf": [
                            {
                              "format": "uuid",
                              "type": "string"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "breedId": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "specieId": {
                          "format": "uuid",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "birthdate",
                        "observations",
                        "sex",
                        "mainImageId",
                        "breedId",
                        "specieId"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "images": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "src": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "src"
                            ]
                          }
                        },
                        "breed": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "format": "uuid",
                              "type": "string"
                            },
                            "name": {
                              "maxLength": 255,
                              "type": "string"
                            },
                            "specieId": {
                              "format": "uuid",
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "specieId"
                          ]
                        },
                        "specie": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "format": "uuid",
                              "type": "string"
                            },
                            "name": {
                              "maxLength": 255,
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ]
                        }
                      },
                      "required": [
                        "images",
                        "breed",
                        "specie"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "const": "SpecieNotFoundError",
                          "type": "string"
                        },
                        "message": {
                          "const": "Specie not found",
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "message"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "const": "BreedNotFoundError",
                          "type": "string"
                        },
                        "message": {
                          "const": "Breed not found",
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "message"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "const": "InvalidBreedSpecieError",
                          "type": "string"
                        },
                        "message": {
                          "const": "Breed does not belong to the specified specie",
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "const": "Unauthorized",
                      "type": "string"
                    },
                    "message": {
                      "const": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "birthdate": {
                    "format": "date",
                    "type": "string"
                  },
                  "observations": {
                    "type": "string"
                  },
                  "sex": {
                    "default": "UNKNOWN",
                    "anyOf": [
                      {
                        "const": "MALE",
                        "type": "string"
                      },
                      {
                        "const": "FEMALE",
                        "type": "string"
                      },
                      {
                        "const": "UNKNOWN",
                        "type": "string"
                      }
                    ]
                  },
                  "mainImageId": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "breedId": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "specieId": {
                    "format": "uuid",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "birthdate",
                  "sex",
                  "breedId",
                  "specieId"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "birthdate": {
                    "format": "date",
                    "type": "string"
                  },
                  "observations": {
                    "type": "string"
                  },
                  "sex": {
                    "default": "UNKNOWN",
                    "anyOf": [
                      {
                        "const": "MALE",
                        "type": "string"
                      },
                      {
                        "const": "FEMALE",
                        "type": "string"
                      },
                      {
                        "const": "UNKNOWN",
                        "type": "string"
                      }
                    ]
                  },
                  "mainImageId": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "breedId": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "specieId": {
                    "format": "uuid",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "birthdate",
                  "sex",
                  "breedId",
                  "specieId"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "birthdate": {
                    "format": "date",
                    "type": "string"
                  },
                  "observations": {
                    "type": "string"
                  },
                  "sex": {
                    "default": "UNKNOWN",
                    "anyOf": [
                      {
                        "const": "MALE",
                        "type": "string"
                      },
                      {
                        "const": "FEMALE",
                        "type": "string"
                      },
                      {
                        "const": "UNKNOWN",
                        "type": "string"
                      }
                    ]
                  },
                  "mainImageId": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "breedId": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "specieId": {
                    "format": "uuid",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "birthdate",
                  "sex",
                  "breedId",
                  "specieId"
                ]
              }
            }
          }
        }
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "minimum": 1,
              "anyOf": [
                {
                  "format": "integer",
                  "default": 0,
                  "type": "string"
                },
                {
                  "minimum": 1,
                  "type": "integer"
                }
              ]
            },
            "in": "query",
            "name": "page",
            "required": true
          },
          {
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 10,
              "anyOf": [
                {
                  "format": "integer",
                  "default": 0,
                  "type": "string"
                },
                {
                  "minimum": 1,
                  "maximum": 100,
                  "default": 10,
                  "type": "integer"
                }
              ]
            },
            "in": "query",
            "name": "pageSize",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "required": false
          },
          {
            "schema": {
              "anyOf": [
                {
                  "const": "MALE",
                  "type": "string"
                },
                {
                  "const": "FEMALE",
                  "type": "string"
                },
                {
                  "const": "UNKNOWN",
                  "type": "string"
                }
              ]
            },
            "in": "query",
            "name": "sex",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "breedId",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "specieId",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "minBirthdate",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "maxBirthdate",
            "required": false
          }
        ],
        "operationId": "getPetPets",
        "summary": "List pets",
        "description": "List paginated pets",
        "tags": [
          "Pet"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "pets",
                    "total"
                  ],
                  "properties": {
                    "pets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "name": {
                                "maxLength": 255,
                                "type": "string"
                              },
                              "birthdate": {
                                "type": "string"
                              },
                              "observations": {
                                "anyOf": [
                                  {
                                    "maxLength": 1024,
                                    "type": "string"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "sex": {
                                "anyOf": [
                                  {
                                    "const": "MALE",
                                    "type": "string"
                                  },
                                  {
                                    "const": "FEMALE",
                                    "type": "string"
                                  },
                                  {
                                    "const": "UNKNOWN",
                                    "type": "string"
                                  }
                                ]
                              },
                              "mainImageId": {
                                "anyOf": [
                                  {
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "breedId": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "specieId": {
                                "format": "uuid",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "birthdate",
                              "observations",
                              "sex",
                              "mainImageId",
                              "breedId",
                              "specieId"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "images": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "format": "uuid",
                                      "type": "string"
                                    },
                                    "src": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "src"
                                  ]
                                }
                              },
                              "breed": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "name": {
                                    "maxLength": 255,
                                    "type": "string"
                                  },
                                  "specieId": {
                                    "format": "uuid",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "specieId"
                                ]
                              },
                              "specie": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "name": {
                                    "maxLength": 255,
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name"
                                ]
                              }
                            },
                            "required": [
                              "images",
                              "breed",
                              "specie"
                            ]
                          }
                        ]
                      }
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total number of pets in the database",
                      "example": 100
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error"
          }
        }
      }
    },
    "/pet/pets/{id}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "operationId": "getPetPetsById",
        "summary": "Find pet by id",
        "description": "Find a pet by its id",
        "tags": [
          "Pet"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "maxLength": 255,
                          "type": "string"
                        },
                        "birthdate": {
                          "type": "string"
                        },
                        "observations": {
                          "anyOf": [
                            {
                              "maxLength": 1024,
                              "type": "string"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "sex": {
                          "anyOf": [
                            {
                              "const": "MALE",
                              "type": "string"
                            },
                            {
                              "const": "FEMALE",
                              "type": "string"
                            },
                            {
                              "const": "UNKNOWN",
                              "type": "string"
                            }
                          ]
                        },
                        "mainImageId": {
                          "anyOf": [
                            {
                              "format": "uuid",
                              "type": "string"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "breedId": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "specieId": {
                          "format": "uuid",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "birthdate",
                        "observations",
                        "sex",
                        "mainImageId",
                        "breedId",
                        "specieId"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "images": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "src": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "src"
                            ]
                          }
                        },
                        "breed": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "format": "uuid",
                              "type": "string"
                            },
                            "name": {
                              "maxLength": 255,
                              "type": "string"
                            },
                            "specieId": {
                              "format": "uuid",
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "specieId"
                          ]
                        },
                        "specie": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "format": "uuid",
                              "type": "string"
                            },
                            "name": {
                              "maxLength": 255,
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ]
                        }
                      },
                      "required": [
                        "images",
                        "breed",
                        "specie"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Pet not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "const": "PetNotFoundError",
                      "type": "string"
                    },
                    "message": {
                      "const": "Pet not found",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation Error"
          }
        }
      }
    },
    "/pet/pets/{id}/images": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "operationId": "postPetPetsByIdImages",
        "summary": "Upload pet image",
        "description": "Upload a new image for a pet",
        "tags": [
          "Pet"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "src": {
                      "type": "string"
                    },
                    "ownerId": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "ownerType": {
                      "maxLength": 50,
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "src",
                    "ownerId",
                    "ownerType"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "const": "Unauthorized",
                      "type": "string"
                    },
                    "message": {
                      "const": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Pet not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "const": "PetNotFoundError",
                      "type": "string"
                    },
                    "message": {
                      "const": "Pet not found",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "default": "File",
                    "format": "binary",
                    "type": "string"
                  }
                },
                "required": [
                  "image"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "default": "File",
                    "format": "binary",
                    "type": "string"
                  }
                },
                "required": [
                  "image"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "default": "File",
                    "format": "binary",
                    "type": "string"
                  }
                },
                "required": [
                  "image"
                ]
              }
            }
          }
        }
      }
    },
    "/pet/breeds": {
      "post": {
        "parameters": [],
        "operationId": "postPetBreeds",
        "summary": "Create breed",
        "description": "Create a new breed",
        "tags": [
          "Pet"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "name": {
                      "maxLength": 255,
                      "type": "string"
                    },
                    "specieId": {
                      "format": "uuid",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "specieId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Specie not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "const": "SpecieNotFoundError",
                      "type": "string"
                    },
                    "message": {
                      "const": "Specie not found",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "const": "Unauthorized",
                      "type": "string"
                    },
                    "message": {
                      "const": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "message"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Breed already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "const": "BreedAlreadyExistsError",
                      "type": "string"
                    },
                    "message": {
                      "const": "Breed already exists",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "specieId": {
                    "format": "uuid",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "specieId"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "specieId": {
                    "format": "uuid",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "specieId"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "specieId": {
                    "format": "uuid",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "specieId"
                ]
              }
            }
          }
        }
      },
      "put": {
        "parameters": [],
        "operationId": "putPetBreeds",
        "summary": "Update breed",
        "description": "Update a breed",
        "tags": [
          "Pet"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "name": {
                      "maxLength": 255,
                      "type": "string"
                    },
                    "specieId": {
                      "format": "uuid",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "specieId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Specie not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "const": "BreedNotFoundError",
                      "type": "string"
                    },
                    "message": {
                      "const": "Breed not found",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "const": "Unauthorized",
                      "type": "string"
                    },
                    "message": {
                      "const": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Breed not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "const": "SpecieNotFoundError",
                      "type": "string"
                    },
                    "message": {
                      "const": "Specie not found",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "specieId": {
                    "format": "uuid",
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "specieId"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "specieId": {
                    "format": "uuid",
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "specieId"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "specieId": {
                    "format": "uuid",
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "specieId"
                ]
              }
            }
          }
        }
      }
    },
    "/pet/species/{id}/breeds": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "operationId": "getPetSpeciesByIdBreeds",
        "summary": "Find all breeds by specie",
        "description": "Find all breeds by specie",
        "tags": [
          "Pet"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "name": {
                        "maxLength": 255,
                        "type": "string"
                      },
                      "specieId": {
                        "format": "uuid",
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "specieId"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Specie not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "const": "SpecieNotFoundError",
                      "type": "string"
                    },
                    "message": {
                      "const": "Specie not found",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation error"
          }
        }
      }
    },
    "/pet/species": {
      "post": {
        "parameters": [],
        "operationId": "postPetSpecies",
        "summary": "Create specie",
        "description": "Create a new specie",
        "tags": [
          "Pet"
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "name": {
                      "maxLength": 255,
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "const": "Unauthorized",
                      "type": "string"
                    },
                    "message": {
                      "const": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "message"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Specie already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "const": "SpecieNotFoundError",
                      "type": "string"
                    },
                    "message": {
                      "const": "Specie not found",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        }
      },
      "put": {
        "parameters": [],
        "operationId": "putPetSpecies",
        "summary": "Update specie",
        "description": "Update a specie",
        "tags": [
          "Pet"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "name": {
                      "maxLength": 255,
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "const": "Unauthorized",
                      "type": "string"
                    },
                    "message": {
                      "const": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Specie not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "const": "SpecieNotFoundError",
                      "type": "string"
                    },
                    "message": {
                      "const": "Specie not found",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name"
                ]
              }
            }
          }
        }
      },
      "get": {
        "operationId": "getPetSpecies",
        "summary": "Find all species",
        "description": "Find all species",
        "tags": [
          "Pet"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "name": {
                        "maxLength": 255,
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/health/patients": {
      "post": {
        "parameters": [],
        "operationId": "postHealthPatients",
        "summary": "Create patient",
        "description": "Create a new patient",
        "tags": [
          "Health"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "name": {
                      "maxLength": 255,
                      "type": "string"
                    },
                    "birthdate": {
                      "type": "string"
                    },
                    "medicalObservations": {
                      "anyOf": [
                        {
                          "maxLength": 1024,
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "sex": {
                      "anyOf": [
                        {
                          "const": "MALE",
                          "type": "string"
                        },
                        {
                          "const": "FEMALE",
                          "type": "string"
                        },
                        {
                          "const": "UNKNOWN",
                          "type": "string"
                        }
                      ]
                    },
                    "breed": {
                      "maxLength": 255,
                      "type": "string"
                    },
                    "specie": {
                      "maxLength": 255,
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "birthdate",
                    "medicalObservations",
                    "sex",
                    "breed",
                    "specie"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "const": "Unauthorized",
                      "type": "string"
                    },
                    "message": {
                      "const": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "birthdate": {
                    "format": "date",
                    "type": "string"
                  },
                  "medicalObservations": {
                    "type": "string"
                  },
                  "sex": {
                    "anyOf": [
                      {
                        "const": "MALE",
                        "type": "string"
                      },
                      {
                        "const": "FEMALE",
                        "type": "string"
                      },
                      {
                        "const": "UNKNOWN",
                        "type": "string"
                      }
                    ]
                  },
                  "breed": {
                    "type": "string"
                  },
                  "specie": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "birthdate",
                  "sex",
                  "breed",
                  "specie"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "birthdate": {
                    "format": "date",
                    "type": "string"
                  },
                  "medicalObservations": {
                    "type": "string"
                  },
                  "sex": {
                    "anyOf": [
                      {
                        "const": "MALE",
                        "type": "string"
                      },
                      {
                        "const": "FEMALE",
                        "type": "string"
                      },
                      {
                        "const": "UNKNOWN",
                        "type": "string"
                      }
                    ]
                  },
                  "breed": {
                    "type": "string"
                  },
                  "specie": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "birthdate",
                  "sex",
                  "breed",
                  "specie"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "birthdate": {
                    "format": "date",
                    "type": "string"
                  },
                  "medicalObservations": {
                    "type": "string"
                  },
                  "sex": {
                    "anyOf": [
                      {
                        "const": "MALE",
                        "type": "string"
                      },
                      {
                        "const": "FEMALE",
                        "type": "string"
                      },
                      {
                        "const": "UNKNOWN",
                        "type": "string"
                      }
                    ]
                  },
                  "breed": {
                    "type": "string"
                  },
                  "specie": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "birthdate",
                  "sex",
                  "breed",
                  "specie"
                ]
              }
            }
          }
        }
      }
    },
    "/auth/users/register": {
      "post": {
        "parameters": [],
        "operationId": "postAuthUsersRegister",
        "summary": "Register",
        "description": "Register a new user and return a JWT token for authentication.",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "format": "email",
                    "type": "string"
                  },
                  "password": {
                    "minLength": 8,
                    "type": "string"
                  },
                  "name": {
                    "minLength": 1,
                    "maxLength": 255,
                    "type": "string"
                  },
                  "birthdate": {
                    "format": "date",
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password",
                  "name",
                  "birthdate"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "format": "email",
                    "type": "string"
                  },
                  "password": {
                    "minLength": 8,
                    "type": "string"
                  },
                  "name": {
                    "minLength": 1,
                    "maxLength": 255,
                    "type": "string"
                  },
                  "birthdate": {
                    "format": "date",
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password",
                  "name",
                  "birthdate"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "format": "email",
                    "type": "string"
                  },
                  "password": {
                    "minLength": 8,
                    "type": "string"
                  },
                  "name": {
                    "minLength": 1,
                    "maxLength": 255,
                    "type": "string"
                  },
                  "birthdate": {
                    "format": "date",
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password",
                  "name",
                  "birthdate"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully registered and token generated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "maxLength": 255,
                          "type": "string"
                        },
                        "email": {
                          "maxLength": 255,
                          "type": "string"
                        },
                        "birthdate": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "email",
                        "birthdate"
                      ]
                    },
                    "token": {
                      "type": "string",
                      "description": "The JWT authentication token."
                    },
                    "expiresIn": {
                      "type": "integer",
                      "description": "The expiration time of the token in seconds."
                    }
                  },
                  "required": [
                    "user",
                    "token",
                    "expiresIn"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "User already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "const": "UserAlreadyExistsError",
                      "type": "string"
                    },
                    "message": {
                      "const": "User already exists",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation Error"
          }
        }
      }
    },
    "/auth/users/login": {
      "post": {
        "parameters": [],
        "operationId": "postAuthUsersLogin",
        "summary": "Login",
        "tags": [
          "Auth"
        ],
        "description": "Login user and retrieve an authentication token.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "format": "email",
                    "type": "string"
                  },
                  "password": {
                    "minLength": 8,
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "format": "email",
                    "type": "string"
                  },
                  "password": {
                    "minLength": 8,
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "format": "email",
                    "type": "string"
                  },
                  "password": {
                    "minLength": 8,
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login and token generation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "The JWT authentication token."
                    },
                    "expiresIn": {
                      "type": "integer",
                      "description": "The expiration time of the token in seconds."
                    }
                  },
                  "required": [
                    "token",
                    "expiresIn"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials provided.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "const": "InvalidCredentialsError",
                      "type": "string"
                    },
                    "message": {
                      "const": "Invalid credentials",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation Error"
          }
        }
      }
    },
    "/auth/users/logout": {
      "post": {
        "operationId": "postAuthUsersLogout",
        "summary": "Logout",
        "description": "Logout the user",
        "tags": [
          "Auth"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "const": "Unauthorized",
                      "type": "string"
                    },
                    "message": {
                      "const": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {}
  }
}